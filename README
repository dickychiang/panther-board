Panther board is based on the DM37x developed by AP module, it is the Android 2.3.4 operation with kernel 2.6.37.

These patches will provide full wireless capabilities for WG73/75xx module (WL127x/8x chip), and also will continue to updated. 

It's patches can be quickly verified and tested the wireless capabilities on the board of panther.

If the patches has any problems or bugs, please contact with me as soon as possible.

And if you are interested about AP or wireless modules, please going to the website.  :)

http://www.jorjin.com.tw/Products_AP_module_Overview.htm

=====================================

Build & Install
---------------
1. Get BSP and tools from TI site :

$ wget http://software-dl.ti.com/dsps/dsps_public_sw/sdo_tii/TI_Android_DevKit/TI_Android_GingerBread_2_3_4_DevKit_2_1/exports/TI_Android_GingerBread_2_3_4Sources.tar.gz
$ wget http://software-dl.ti.com/dsps/dsps_public_sw/sdo_tii/TI_Android_DevKit/TI_Android_GingerBread_2_3_4_DevKit_2_1/exports/Tools.tar.gz

2. Repo sync with local :

$ cd TI_Android_GingerBread_2_3_4Sources
$ ./.repo/repo/repo sync --local-only

3. Patch latest "PPOWP" to your directory. Refer below 'Patch method'

4. Export envronment path :
export MYDROID=$HOME/TI_Android_GingerBread_2_3_4Sources
export PATH=$MYDROID/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin:$PATH
export CROSS_COMPILE=arm-eabi-
export ARCH=arm
export PATH=$MYDROID/u-boot/tools:$PATH
export TARGET_PRODUCT=beagleboard
export OMAPES=5.x
 
5. Make u-boot,x-loader,kernel and android :

   a) x-loader
    $ make distclean 
    $ make omap3beagle_config ;
    $ make 2>&1

   b) u-boot
    $ make distclean
    $ make omap3_beagle_config
    $ make

   c) kernel & android
    $ cd $MYDROID
    $ make clean
    $ make TARGET_PRODUCT=beagleboard OMAPES=5.x

6. Copy all the image to a directory

    a) Create a directory
    $ cd $MYDROID/prebuild_images ; mkdir $MYDROID/prebuild_images/Boot_Images ; mkdir MYDROID/prebuild_images/Filesystem

    b) Make & copy rootfs image
    $ sudo $MYDROID/../Tools/mktarball.sh $MYDROID/out/host/linux-x86/bin/fs_get_stats android_rootfs . rootfs rootfs.tar.bz2
    $ cp $MYDROID/out/target/product/beagleboard/rootfs.tar.bz2 $MYDROID/prebuilt_images/Filesystem

    c) Copy kernel image
    $ cp $MYDROID/kernel/arch/arm/boot/uImage $MYDROID/prebuilt_images/Boot_Images
     
    d) Change name of x-load.bin to MLO
    $ cp $MYDROID/../Tools/signGO $MYDROID/x-loader
    $ cd $MYDROID/x-loader
    $ ./signGP $MYDROID/x-loader/x-load.bin  --- The will generate a file "x-load.bin.ift"
    $ mv x-load.bin.ift MLO

    e) Before generate boot script to modify it.
    $ sed -i 's/ttyO0/ttyO2/g' $MYDROID/../Tools/mk-bootscr/mkbootscr 
    $ sed -i 's/128M/512M/g' $MYDROID/../Tools/mk-bootscr/mkbootscr 
    $ sed -i 's/mkimage/.\/mkimage/g' $MYDROID/../Tools/mk-bootscr/mkbootscr                                               
    $ cd $MYDROID/../Tools/mk-bootscr
    $ ./mkbootscr
    $ cp $MYDROID/../Tools/mk-bootscr/boot.scr $MYDROID/prebuilt_images/Boot_Images

    f) Copy u-boot image
    $ cp $MYDROID/u-boot/u-boot.bin $MYDROID/prebuilt_images/Boot_Images

7. Make partition to SD card

    a) Copy script to image directory
    $ cp $MYDROID/../Tools/mk-mmc/mkmmc-android.sh $MYDROID/prebuilt_images
    
    b) Execute script before,prepare your SD card
    $ cd $MYDROID/prebuilt_images
    $ sudo ./mkmmc-android.sh /dev/sdx


Patch method
-------------

Advice to use 'git' patch it,even though can use 'patch' command.
Since the 'patch' can not generate to ".bin" file in your work directory.

Note : use patches before, please move to correspond path to first. Example :

    $ cp panther-board/kernel_path/*.patch  $MYDROID/kernel/

1. Git
        Install git tool first.

        $ sudo apt-get install git

        How to do patch it ? follow up as below :

        $ git apply <patch_name>

        if you want to restore you'r code,can to do it :

        $ git apply -R <patch_name>

        Ignore warring message "trailing whitespace".

2. Patch

        Use general a command 'patch' to patch it :

        $ patch -p1 < <patch_name>

        Please note your path from patch. If you want to restore :

        $ patch -p1 -R < <patch_name>


SoftAP By Manual Test
---------------------
If you want to verify to SoftAP functions,you must to install "busybox" in you filesystem and then use script to start softap.

Install busybox :

1. Download busybox-1.19.2 for lastest version.

2. Toolchain use arm-2009qx to compile busybox.

3. Patch to "0004-add-hostap-dhcp-service-in-init.rc.patch" in android_path/wlan/nlcp_r4/softap_wpa_suppl_8.

4. Copy the script to you file system and then execute it. Scan it out of you phone or other station device.
