From d28fbef349b49ed5cb8ccb237ecd946875028aed Mon Sep 17 00:00:00 2001
From: Dicky Chiang <dickychiang73@gmail.com>
Date: Sun, 23 Oct 2011 03:00:59 +0800
Subject: [PATCH] fix dhcp request fail

for nlcp r4, different to dhcp serivce name, revert android dhcp service name that include device name
---
 system/core/libnetutils/dhcp_utils.c |   27 ++++++++++++---------------
 1 files changed, 12 insertions(+), 15 deletions(-)

diff --git a/system/core/libnetutils/dhcp_utils.c b/system/core/libnetutils/dhcp_utils.c
index dc71bab..089848a 100644
--- a/system/core/libnetutils/dhcp_utils.c
+++ b/system/core/libnetutils/dhcp_utils.c
@@ -140,19 +140,18 @@ int dhcp_do_request(const char *interface,
             DHCP_PROP_NAME_PREFIX,
             interface);
 
-    snprintf(daemon_prop_name, sizeof(daemon_prop_name), "%s_%s",
-            DAEMON_PROP_NAME,
-            interface);
+    snprintf(daemon_prop_name, sizeof(daemon_prop_name), "%s",
+            DAEMON_PROP_NAME );
 
     /* Erase any previous setting of the dhcp result property */
     property_set(result_prop_name, "");
 
     /* Start the daemon and wait until it's ready */
     if (property_get(HOSTNAME_PROP_NAME, prop_value, NULL) && (prop_value[0] != '\0'))
-        snprintf(daemon_cmd, sizeof(daemon_cmd), "%s_%s:-h %s %s", DAEMON_NAME, interface,
+        snprintf(daemon_cmd, sizeof(daemon_cmd), "%s:-h %s %s", DAEMON_NAME,
                  prop_value, interface);
     else
-        snprintf(daemon_cmd, sizeof(daemon_cmd), "%s_%s:%s", DAEMON_NAME, interface, interface);
+        snprintf(daemon_cmd, sizeof(daemon_cmd), "%s:%s", DAEMON_NAME, interface);
     memset(prop_value, '\0', PROPERTY_VALUE_MAX);
     property_set(ctrl_prop, daemon_cmd);
     if (wait_for_property(daemon_prop_name, desired_status, 10) < 0) {
@@ -195,11 +194,10 @@ int dhcp_stop(const char *interface)
             DHCP_PROP_NAME_PREFIX,
             interface);
 
-    snprintf(daemon_prop_name, sizeof(daemon_prop_name), "%s_%s",
-            DAEMON_PROP_NAME,
-            interface);
+    snprintf(daemon_prop_name, sizeof(daemon_prop_name), "%s",
+            DAEMON_PROP_NAME );
 
-    snprintf(daemon_cmd, sizeof(daemon_cmd), "%s_%s", DAEMON_NAME, interface);
+    snprintf(daemon_cmd, sizeof(daemon_cmd), "%s", DAEMON_NAME );
 
     /* Stop the daemon and wait until it's reported to be stopped */
     property_set(ctrl_prop, daemon_cmd);
@@ -220,11 +218,10 @@ int dhcp_release_lease(const char *interface)
     const char *ctrl_prop = "ctl.stop";
     const char *desired_status = "stopped";
 
-    snprintf(daemon_prop_name, sizeof(daemon_prop_name), "%s_%s",
-            DAEMON_PROP_NAME,
-            interface);
+    snprintf(daemon_prop_name, sizeof(daemon_prop_name), "%s",
+            DAEMON_PROP_NAME );
 
-    snprintf(daemon_cmd, sizeof(daemon_cmd), "%s_%s", DAEMON_NAME, interface);
+    snprintf(daemon_cmd, sizeof(daemon_cmd), "%s", DAEMON_NAME );
 
     /* Stop the daemon and wait until it's reported to be stopped */
     property_set(ctrl_prop, daemon_cmd);
@@ -264,7 +261,7 @@ int dhcp_do_request_renew(const char *interface,
     property_set(result_prop_name, "");
 
     /* Start the renew daemon and wait until it's ready */
-    snprintf(daemon_cmd, sizeof(daemon_cmd), "%s_%s:%s", DAEMON_NAME_RENEW, interface, interface);
+    snprintf(daemon_cmd, sizeof(daemon_cmd), "%s:%s", DAEMON_NAME_RENEW, interface);
     memset(prop_value, '\0', PROPERTY_VALUE_MAX);
     property_set(ctrl_prop, daemon_cmd);
 
@@ -286,4 +283,4 @@ int dhcp_do_request_renew(const char *interface,
         snprintf(errmsg, sizeof(errmsg), "DHCP Renew result was %s", prop_value);
         return -1;
     }
-}
\ No newline at end of file
+}
-- 
1.7.4.1

